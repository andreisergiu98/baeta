/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */

import * as Types from "../../__generated__/types";
import type { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import baetaExtensions from "../../extensions";


interface DefinedFields {
  User: 'id' | 'name' | 'birthday';
  Query: 'user' | 'users';
};

interface DefinedInputFields {
  UserWhereUnique: 'id' | 'email';
};

export type User = Pick<Types.User, DefinedFields['User']>;
export type DateTime = Types.DateTime;
export type UserWhereUnique = Pick<Types.UserWhereUnique, DefinedInputFields['UserWhereUnique']>;
export type Query = Pick<Types.Query, DefinedFields['Query']>;

export namespace ModuleMetadata {
  export const id = 'user';
  export const dirname = './user';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"User","loc":{"start":5,"end":9}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":13,"end":15}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":17,"end":19}},"loc":{"start":17,"end":19}},"loc":{"start":17,"end":20}},"directives":[],"loc":{"start":13,"end":20}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"name","loc":{"start":22,"end":26}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":28,"end":34}},"loc":{"start":28,"end":34}},"loc":{"start":28,"end":35}},"directives":[],"loc":{"start":22,"end":35}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"birthday","loc":{"start":37,"end":45}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"DateTime","loc":{"start":47,"end":55}},"loc":{"start":47,"end":55}},"directives":[],"loc":{"start":37,"end":55}}],"loc":{"start":0,"end":57}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"UserWhereUnique","loc":{"start":65,"end":80}},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"constraints","loc":{"start":82,"end":93}},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"minFields","loc":{"start":94,"end":103}},"value":{"kind":"IntValue","value":"1","loc":{"start":105,"end":106}},"loc":{"start":94,"end":106}},{"kind":"Argument","name":{"kind":"Name","value":"maxFields","loc":{"start":108,"end":117}},"value":{"kind":"IntValue","value":"1","loc":{"start":119,"end":120}},"loc":{"start":108,"end":120}}],"loc":{"start":81,"end":121}}],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":125,"end":127}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":129,"end":131}},"loc":{"start":129,"end":131}},"directives":[],"loc":{"start":125,"end":131}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"email","loc":{"start":133,"end":138}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":140,"end":146}},"loc":{"start":140,"end":146}},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"trim","loc":{"start":148,"end":152}},"arguments":[],"loc":{"start":147,"end":152}},{"kind":"Directive","name":{"kind":"Name","value":"lower","loc":{"start":154,"end":159}},"arguments":[],"loc":{"start":153,"end":159}},{"kind":"Directive","name":{"kind":"Name","value":"validString","loc":{"start":161,"end":172}},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"format","loc":{"start":173,"end":179}},"value":{"kind":"EnumValue","value":"EMAIL","loc":{"start":181,"end":186}},"loc":{"start":173,"end":186}}],"loc":{"start":160,"end":187}}],"loc":{"start":133,"end":187}}],"loc":{"start":59,"end":189}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":196,"end":201}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"user","loc":{"start":205,"end":209}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":210,"end":215}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"UserWhereUnique","loc":{"start":217,"end":232}},"loc":{"start":217,"end":232}},"directives":[],"loc":{"start":210,"end":232}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"User","loc":{"start":235,"end":239}},"loc":{"start":235,"end":239}},"directives":[],"loc":{"start":205,"end":239}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"users","loc":{"start":241,"end":246}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":247,"end":249}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":251,"end":257}},"loc":{"start":251,"end":257}},"directives":[],"loc":{"start":247,"end":257}}],"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"User","loc":{"start":261,"end":265}},"loc":{"start":261,"end":265}},"loc":{"start":260,"end":266}},"directives":[],"loc":{"start":241,"end":266}}],"loc":{"start":191,"end":268}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      User: {
        ...module.createTypeMethods<User, Types.ContextType>("User"),
        id: module.createResolverBuilder<Types.Scalars["ID"]["output"], User, Types.ContextType, { }>("User", "id"),
        name: module.createResolverBuilder<Types.Scalars["String"]["output"], User, Types.ContextType, { }>("User", "name"),
        birthday: module.createResolverBuilder<Types.Maybe<DateTime>, User, Types.ContextType, { }>("User", "birthday"),
      },
      Query: {
        ...module.createTypeMethods<{ }, Types.ContextType>("Query"),
        user: module.createResolverBuilder<Types.Maybe<User>, { }, Types.ContextType, Types.QueryUserArgs>("Query", "user"),
        users: module.createResolverBuilder<Types.Maybe<Array<Types.Maybe<User>>>, { }, Types.ContextType, Types.QueryUsersArgs>("Query", "users"),
      },
    };
  }
}

export const createUserModule = () => Baeta.createModuleManager(ModuleMetadata, baetaExtensions);
export const getUserModule = Baeta.createSingletonModule(createUserModule);
