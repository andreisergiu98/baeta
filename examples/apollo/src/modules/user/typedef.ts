/* This file was generated by baeta. Do not edit it directly. */

/* eslint-disable */

import * as Types from "../../__generated__/types";
import { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import baetaExtensions from "../../extensions";


interface DefinedFields {
  User: 'id' | 'name' | 'birthday';
  Query: 'user';
};

interface DefinedInputFields {
  UserWhereUnique: 'id' | 'email';
};

export type User = Pick<Types.User, DefinedFields['User']>;
export type DateTime = Types.DateTime;
export type UserWhereUnique = Pick<Types.UserWhereUnique, DefinedInputFields['UserWhereUnique']>;
export type Query = Pick<Types.Query, DefinedFields['Query']>;

export namespace ModuleMetadata {
  export const id = 'user';
  export const dirname = './user';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"User","loc":{"start":5,"end":9}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":14,"end":16}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":18,"end":20}},"loc":{"start":18,"end":20}},"loc":{"start":18,"end":21}},"directives":[],"loc":{"start":14,"end":21}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"name","loc":{"start":24,"end":28}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":30,"end":36}},"loc":{"start":30,"end":36}},"loc":{"start":30,"end":37}},"directives":[],"loc":{"start":24,"end":37}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"birthday","loc":{"start":40,"end":48}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"DateTime","loc":{"start":50,"end":58}},"loc":{"start":50,"end":58}},"directives":[],"loc":{"start":40,"end":58}}],"loc":{"start":0,"end":60}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"UserWhereUnique","loc":{"start":68,"end":83}},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"constraints","loc":{"start":85,"end":96}},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"minFields","loc":{"start":97,"end":106}},"value":{"kind":"IntValue","value":"1","loc":{"start":108,"end":109}},"loc":{"start":97,"end":109}},{"kind":"Argument","name":{"kind":"Name","value":"maxFields","loc":{"start":111,"end":120}},"value":{"kind":"IntValue","value":"1","loc":{"start":122,"end":123}},"loc":{"start":111,"end":123}}],"loc":{"start":84,"end":124}}],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":129,"end":131}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":133,"end":135}},"loc":{"start":133,"end":135}},"directives":[],"loc":{"start":129,"end":135}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"email","loc":{"start":138,"end":143}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":145,"end":151}},"loc":{"start":145,"end":151}},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"trim","loc":{"start":153,"end":157}},"arguments":[],"loc":{"start":152,"end":157}},{"kind":"Directive","name":{"kind":"Name","value":"lower","loc":{"start":159,"end":164}},"arguments":[],"loc":{"start":158,"end":164}},{"kind":"Directive","name":{"kind":"Name","value":"validString","loc":{"start":166,"end":177}},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"format","loc":{"start":178,"end":184}},"value":{"kind":"EnumValue","value":"EMAIL","loc":{"start":186,"end":191}},"loc":{"start":178,"end":191}}],"loc":{"start":165,"end":192}}],"loc":{"start":138,"end":192}}],"loc":{"start":62,"end":194}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":201,"end":206}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"user","loc":{"start":211,"end":215}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":216,"end":221}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"UserWhereUnique","loc":{"start":223,"end":238}},"loc":{"start":223,"end":238}},"directives":[],"loc":{"start":216,"end":238}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"User","loc":{"start":241,"end":245}},"loc":{"start":241,"end":245}},"directives":[],"loc":{"start":211,"end":245}}],"loc":{"start":196,"end":247}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      User: {
        ...module.createTypeMethods<User, Types.ContextType>("User"),
        id: module.createResolverBuilder<Types.Scalars["ID"], User, Types.ContextType, {}>("User", "id"),
        name: module.createResolverBuilder<Types.Scalars["String"], User, Types.ContextType, {}>("User", "name"),
        birthday: module.createResolverBuilder<Types.Maybe<DateTime>, User, Types.ContextType, {}>("User", "birthday"),
      },
      Query: {
        ...module.createTypeMethods<{}, Types.ContextType>("Query"),
        user: module.createResolverBuilder<Types.Maybe<User>, {}, Types.ContextType, Types.QueryUserArgs>("Query", "user"),
      },
    };
  }
}

export const createUserModule = () => Baeta.createModuleManager(ModuleMetadata, baetaExtensions);
export const getUserModule = Baeta.createSingletonModule(createUserModule);
