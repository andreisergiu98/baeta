/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */
/* @biome-ignore-all: generated file */

import * as BaetaUtility from "./utility.ts";
import * as BaetaOverrides from "../modules/types.ts";

export type Scalars = BaetaOverrides.Scalars;

export type Query = BaetaUtility.Or<BaetaOverrides.ObjectTypes["Query"], {
  user: User | null
  users: Array<User> | null
}>

export type Mutation = BaetaUtility.Or<BaetaOverrides.ObjectTypes["Mutation"], {
  createUser: User
  updateUser: User | null
}>

export type Subscription = BaetaUtility.Or<BaetaOverrides.ObjectTypes["Subscription"], {
  userCreated: User
  userUpdated: User
}>

export type StringFormat = 'EMAIL' | 'UUID' | 'URL'

export type PageInfo = BaetaUtility.Or<BaetaOverrides.ObjectTypes["PageInfo"], {
  hasPreviousPage: Scalars["Boolean"]
  hasNextPage: Scalars["Boolean"]
}>

export type UserConnection = BaetaUtility.Or<BaetaOverrides.ObjectTypes["UserConnection"], {
  pageInfo: PageInfo
  edges: Array<UserEdge | null> | null
}>

export type UserEdge = BaetaUtility.Or<BaetaOverrides.ObjectTypes["UserEdge"], {
  cursor: Scalars["ID"]
  node: User | null
}>

export type UserPhotoConnection = BaetaUtility.Or<BaetaOverrides.ObjectTypes["UserPhotoConnection"], {
  pageInfo: PageInfo
  edges: Array<UserPhotoEdge | null> | null
}>

export type UserPhotoEdge = BaetaUtility.Or<BaetaOverrides.ObjectTypes["UserPhotoEdge"], {
  cursor: Scalars["ID"]
  node: UserPhoto | null
}>

export type UserPhoto = BaetaUtility.Or<BaetaOverrides.ObjectTypes["UserPhoto"], {
  id: Scalars["ID"]
  url: Scalars["String"]
}>

export type User = BaetaUtility.Or<BaetaOverrides.ObjectTypes["User"], {
  id: Scalars["ID"]
  email: Scalars["String"]
  lastName: Scalars["String"]
  profile: Scalars["String"] | null
  givenName: Scalars["String"] | null
  birthday: Scalars["DateTime"] | null
}>

export type PageInfoHasPreviousPageArgs = {
};

export type PageInfoHasNextPageArgs = {
};

export type UserConnectionPageInfoArgs = {
};

export type UserConnectionEdgesArgs = {
};

export type UserEdgeCursorArgs = {
};

export type UserEdgeNodeArgs = {
};

export type UserPhotoConnectionPageInfoArgs = {
};

export type UserPhotoConnectionEdgesArgs = {
};

export type UserPhotoEdgeCursorArgs = {
};

export type UserPhotoEdgeNodeArgs = {
};

export type UserPhotosConnectionArgs = {
  page: UserPhotoPage
};

export type UserPhotosArgs = {
};

export type UserIdArgs = {
};

export type UserEmailArgs = {
};

export type UserLastNameArgs = {
};

export type UserProfileArgs = {
};

export type UserGivenNameArgs = {
};

export type UserBirthdayArgs = {
};

export type UserPhotoIdArgs = {
};

export type UserPhotoUrlArgs = {
};

export type QueryUserArgs = {
  where: UserWhereUniqueInput
};

export type QueryUsersArgs = {
  where: UserWhereUniqueInput | null
};

export type MutationCreateUserArgs = {
  data: CreateUserInput
};

export type MutationUpdateUserArgs = {
  where: UserWhereUniqueInput
  data: UpdateUserInput
};

export type SubscriptionUserCreatedArgs = {
};

export type SubscriptionUserUpdatedArgs = {
};

export type UserPhotoPage = {
  cursor: Scalars["ID"] | null
  limit: Scalars["Int"]
};

export type UserWhereUniqueInput = {
  id: Scalars["ID"] | null
  email: Scalars["String"] | null
};

export type CreateUserInput = {
  email: Scalars["String"]
  lastName: Scalars["String"]
  givenName: Scalars["String"] | null
  birthday: Scalars["DateTime"] | null
  profile: Scalars["String"] | null
};

export type UpdateUserInput = {
  email: Scalars["String"] | null
  lastName: Scalars["String"] | null
  givenName: Scalars["String"] | null
  birthday: Scalars["DateTime"] | null
  profile: Scalars["String"] | null
};