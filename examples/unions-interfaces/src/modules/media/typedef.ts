/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */

import * as Types from "../../__generated__/types";
import type { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";


interface DefinedFields {
  Movie: 'id' | 'title' | 'year';
  TVShow: 'id' | 'title' | 'year' | 'seasons';
  Book: 'id' | 'title' | 'year' | 'author' | 'pages';
  Query: 'media';
};

export type Movie = Pick<Types.Movie, DefinedFields['Movie']>;
export type TVShow = Pick<Types.TvShow, DefinedFields['TVShow']>;
export type Book = Pick<Types.Book, DefinedFields['Book']>;
export type Readable = Types.DefinedInterfacesWithoutExtensions["Readable"];
export type Media = Types.DefinedUnionsWithoutExtensions["Media"];
export type Query = Pick<Types.Query, DefinedFields['Query']>;

export namespace ModuleMetadata {
  export const id = 'media';
  export const dirname = './media';
  export const hashes = {"Movie":{"hash":"14secu7","fieldsHashes":{"id":"1ij53kg","title":"bsmiek","year":"1es0thu"}},"TVShow":{"hash":"1e6svji","fieldsHashes":{"id":"1ij53kg","seasons":"1es0thu","title":"bsmiek","year":"1es0thu"}},"Book":{"hash":"7o02j3","fieldsHashes":{"author":"bsmiek","id":"1ij53kg","pages":"1es0thu","title":"bsmiek","year":"1es0thu"}},"Query":{"hash":"z5yrcd","fieldsHashes":{"media":"eiez9b"}}};
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Movie","loc":{"start":5,"end":10}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":14,"end":16}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":18,"end":20}},"loc":{"start":18,"end":20}},"loc":{"start":18,"end":21}},"directives":[],"loc":{"start":14,"end":21}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"title","loc":{"start":23,"end":28}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":30,"end":36}},"loc":{"start":30,"end":36}},"loc":{"start":30,"end":37}},"directives":[],"loc":{"start":23,"end":37}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"year","loc":{"start":41,"end":45}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":47,"end":50}},"loc":{"start":47,"end":50}},"loc":{"start":47,"end":51}},"directives":[],"loc":{"start":41,"end":51}}],"loc":{"start":0,"end":53}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"TVShow","loc":{"start":60,"end":66}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":70,"end":72}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":74,"end":76}},"loc":{"start":74,"end":76}},"loc":{"start":74,"end":77}},"directives":[],"loc":{"start":70,"end":77}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"title","loc":{"start":79,"end":84}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":86,"end":92}},"loc":{"start":86,"end":92}},"loc":{"start":86,"end":93}},"directives":[],"loc":{"start":79,"end":93}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"year","loc":{"start":95,"end":99}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":101,"end":104}},"loc":{"start":101,"end":104}},"loc":{"start":101,"end":105}},"directives":[],"loc":{"start":95,"end":105}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"seasons","loc":{"start":109,"end":116}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":118,"end":121}},"loc":{"start":118,"end":121}},"loc":{"start":118,"end":122}},"directives":[],"loc":{"start":109,"end":122}}],"loc":{"start":55,"end":124}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Book","loc":{"start":131,"end":135}},"interfaces":[{"kind":"NamedType","name":{"kind":"Name","value":"Readable","loc":{"start":147,"end":155}},"loc":{"start":147,"end":155}}],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":159,"end":161}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":163,"end":165}},"loc":{"start":163,"end":165}},"loc":{"start":163,"end":166}},"directives":[],"loc":{"start":159,"end":166}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"title","loc":{"start":168,"end":173}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":175,"end":181}},"loc":{"start":175,"end":181}},"loc":{"start":175,"end":182}},"directives":[],"loc":{"start":168,"end":182}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"year","loc":{"start":184,"end":188}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":190,"end":193}},"loc":{"start":190,"end":193}},"loc":{"start":190,"end":194}},"directives":[],"loc":{"start":184,"end":194}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"author","loc":{"start":196,"end":202}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":204,"end":210}},"loc":{"start":204,"end":210}},"loc":{"start":204,"end":211}},"directives":[],"loc":{"start":196,"end":211}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"pages","loc":{"start":213,"end":218}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":220,"end":223}},"loc":{"start":220,"end":223}},"loc":{"start":220,"end":224}},"directives":[],"loc":{"start":213,"end":224}}],"loc":{"start":126,"end":226}},{"kind":"UnionTypeDefinition","name":{"kind":"Name","value":"Media","loc":{"start":234,"end":239}},"directives":[],"types":[{"kind":"NamedType","name":{"kind":"Name","value":"Movie","loc":{"start":242,"end":247}},"loc":{"start":242,"end":247}},{"kind":"NamedType","name":{"kind":"Name","value":"TVShow","loc":{"start":250,"end":256}},"loc":{"start":250,"end":256}},{"kind":"NamedType","name":{"kind":"Name","value":"Book","loc":{"start":259,"end":263}},"loc":{"start":259,"end":263}}],"loc":{"start":228,"end":263}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":270,"end":275}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"media","loc":{"start":279,"end":284}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Media","loc":{"start":287,"end":292}},"loc":{"start":287,"end":292}},"loc":{"start":287,"end":293}},"loc":{"start":286,"end":294}},"loc":{"start":286,"end":295}},"directives":[],"loc":{"start":279,"end":295}}],"loc":{"start":265,"end":297}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      Movie: {
        ...module.createTypeMethods<Movie, Types.ContextType>("Movie"),
        id: module.createResolverBuilder<Types.Scalars["ID"]["output"], Movie, Types.ContextType, { }>("Movie", "id"),
        title: module.createResolverBuilder<Types.Scalars["String"]["output"], Movie, Types.ContextType, { }>("Movie", "title"),
        year: module.createResolverBuilder<Types.Scalars["Int"]["output"], Movie, Types.ContextType, { }>("Movie", "year"),
      },
      TVShow: {
        ...module.createTypeMethods<TVShow, Types.ContextType>("TVShow"),
        id: module.createResolverBuilder<Types.Scalars["ID"]["output"], TVShow, Types.ContextType, { }>("TVShow", "id"),
        title: module.createResolverBuilder<Types.Scalars["String"]["output"], TVShow, Types.ContextType, { }>("TVShow", "title"),
        year: module.createResolverBuilder<Types.Scalars["Int"]["output"], TVShow, Types.ContextType, { }>("TVShow", "year"),
        seasons: module.createResolverBuilder<Types.Scalars["Int"]["output"], TVShow, Types.ContextType, { }>("TVShow", "seasons"),
      },
      Book: {
        ...module.createTypeMethods<Book, Types.ContextType>("Book"),
        id: module.createResolverBuilder<Types.Scalars["ID"]["output"], Book, Types.ContextType, { }>("Book", "id"),
        title: module.createResolverBuilder<Types.Scalars["String"]["output"], Book, Types.ContextType, { }>("Book", "title"),
        year: module.createResolverBuilder<Types.Scalars["Int"]["output"], Book, Types.ContextType, { }>("Book", "year"),
        author: module.createResolverBuilder<Types.Scalars["String"]["output"], Book, Types.ContextType, { }>("Book", "author"),
        pages: module.createResolverBuilder<Types.Scalars["Int"]["output"], Book, Types.ContextType, { }>("Book", "pages"),
      },
      Query: {
        ...module.createTypeMethods<{ }, Types.ContextType>("Query"),
        media: module.createResolverBuilder<Array<Media>, { }, Types.ContextType, { }>("Query", "media"),
      },
      Media: {
        $resolveType: module.createResolveType<Types.DefinedUnionsResults["Media"], Types.DefinedUnionsWithoutExtensions["Media"], Types.ContextType>("Media"),
      },
    };
  }
}

export const createMediaModule = () => Baeta.createModuleManager(ModuleMetadata);
export const getMediaModule = Baeta.createSingletonModule(createMediaModule);
