/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */

import * as Types from "../../__generated__/types";
import type { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";


interface DefinedFields {
  Comic: 'id' | 'title' | 'year' | 'artist' | 'pages';
  Readable: 'id' | 'pages';
};

export type Readable = Types.DefinedInterfacesWithoutExtensions["Readable"];
export type Comic = Pick<Types.Comic, DefinedFields['Comic']>;
export type Media = Types.DefinedUnionsWithoutExtensions["Media"];

export namespace ModuleMetadata {
  export const id = 'comic';
  export const dirname = './comic';
  export const hashes = {"Comic":{"hash":"1a5bwam","fieldsHashes":{"artist":"bsmiek","id":"1ij53kg","pages":"1es0thu","title":"bsmiek","year":"1es0thu"}}};
  export const typedef = {"kind":"Document","definitions":[{"kind":"InterfaceTypeDefinition","name":{"kind":"Name","value":"Readable","loc":{"start":10,"end":18}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":25,"end":27}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":29,"end":31}},"loc":{"start":29,"end":31}},"loc":{"start":29,"end":32}},"directives":[],"loc":{"start":25,"end":32}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"pages","loc":{"start":37,"end":42}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":44,"end":47}},"loc":{"start":44,"end":47}},"loc":{"start":44,"end":48}},"directives":[],"loc":{"start":37,"end":48}}],"loc":{"start":0,"end":50}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Comic","loc":{"start":57,"end":62}},"interfaces":[{"kind":"NamedType","name":{"kind":"Name","value":"Readable","loc":{"start":74,"end":82}},"loc":{"start":74,"end":82}}],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":89,"end":91}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":93,"end":95}},"loc":{"start":93,"end":95}},"loc":{"start":93,"end":96}},"directives":[],"loc":{"start":89,"end":96}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"title","loc":{"start":101,"end":106}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":108,"end":114}},"loc":{"start":108,"end":114}},"loc":{"start":108,"end":115}},"directives":[],"loc":{"start":101,"end":115}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"year","loc":{"start":120,"end":124}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":126,"end":129}},"loc":{"start":126,"end":129}},"loc":{"start":126,"end":130}},"directives":[],"loc":{"start":120,"end":130}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"artist","loc":{"start":135,"end":141}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":143,"end":149}},"loc":{"start":143,"end":149}},"loc":{"start":143,"end":150}},"directives":[],"loc":{"start":135,"end":150}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"pages","loc":{"start":155,"end":160}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":162,"end":165}},"loc":{"start":162,"end":165}},"loc":{"start":162,"end":166}},"directives":[],"loc":{"start":155,"end":166}}],"loc":{"start":52,"end":168}},{"kind":"UnionTypeExtension","name":{"kind":"Name","value":"Media","loc":{"start":183,"end":188}},"directives":[],"types":[{"kind":"NamedType","name":{"kind":"Name","value":"Comic","loc":{"start":191,"end":196}},"loc":{"start":191,"end":196}}],"loc":{"start":170,"end":196}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      Comic: {
        ...module.createTypeMethods<Comic, Types.ContextType>("Comic"),
        id: module.createResolverBuilder<Types.Scalars["ID"]["output"], Comic, Types.ContextType, { }>("Comic", "id"),
        title: module.createResolverBuilder<Types.Scalars["String"]["output"], Comic, Types.ContextType, { }>("Comic", "title"),
        year: module.createResolverBuilder<Types.Scalars["Int"]["output"], Comic, Types.ContextType, { }>("Comic", "year"),
        artist: module.createResolverBuilder<Types.Scalars["String"]["output"], Comic, Types.ContextType, { }>("Comic", "artist"),
        pages: module.createResolverBuilder<Types.Scalars["Int"]["output"], Comic, Types.ContextType, { }>("Comic", "pages"),
      },
      Readable: {
        $resolveType: module.createResolveType<Types.DefinedInterfacesResults["Readable"], Types.DefinedInterfacesWithoutExtensions["Readable"], Types.ContextType>("Readable"),
      },
    };
  }
}

export const createComicModule = () => Baeta.createModuleManager(ModuleMetadata);
export const getComicModule = Baeta.createSingletonModule(createComicModule);
