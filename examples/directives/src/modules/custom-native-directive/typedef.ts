/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */

import * as Types from "../../__generated__/types";
import type { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";


interface DefinedFields {
  NameWithUpper: 'name';
  Query: 'testUpperDirective';
};

export type NameWithUpper = Pick<Types.NameWithUpper, DefinedFields['NameWithUpper']>;
export type Query = Pick<Types.Query, DefinedFields['Query']>;

export namespace ModuleMetadata {
  export const id = 'custom-native-directive';
  export const dirname = './custom-native-directive';
  export const hashes = {"NameWithUpper":{"hash":"2thu4f","fieldsHashes":{"name":"bsmiek"}},"Query":{"hash":"4lp0dr","fieldsHashes":{"testUpperDirective":"1l2t9k3"}}};
  export const typedef = {"kind":"Document","definitions":[{"kind":"DirectiveDefinition","name":{"kind":"Name","value":"upper","loc":{"start":11,"end":16}},"arguments":[],"repeatable":false,"locations":[{"kind":"Name","value":"FIELD_DEFINITION","loc":{"start":20,"end":36}}],"loc":{"start":0,"end":36}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"NameWithUpper","loc":{"start":43,"end":56}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"name","loc":{"start":63,"end":67}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":69,"end":75}},"loc":{"start":69,"end":75}},"loc":{"start":69,"end":76}},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"upper","loc":{"start":78,"end":83}},"arguments":[],"loc":{"start":77,"end":83}}],"loc":{"start":63,"end":83}}],"loc":{"start":38,"end":85}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":92,"end":97}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"testUpperDirective","loc":{"start":104,"end":122}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"name","loc":{"start":123,"end":127}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":129,"end":135}},"loc":{"start":129,"end":135}},"loc":{"start":129,"end":136}},"directives":[],"loc":{"start":123,"end":136}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"NameWithUpper","loc":{"start":139,"end":152}},"loc":{"start":139,"end":152}},"directives":[],"loc":{"start":104,"end":152}}],"loc":{"start":87,"end":154}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      NameWithUpper: {
        ...module.createTypeMethods<NameWithUpper, Types.ContextType>("NameWithUpper"),
        name: module.createResolverBuilder<Types.Scalars["String"]["output"], NameWithUpper, Types.ContextType, { }>("NameWithUpper", "name"),
      },
      Query: {
        ...module.createTypeMethods<{ }, Types.ContextType>("Query"),
        testUpperDirective: module.createResolverBuilder<Types.Maybe<NameWithUpper>, { }, Types.ContextType, Types.QueryTestUpperDirectiveArgs>("Query", "testUpperDirective"),
      },
    };
  }
}

export const createCustomNativeDirectiveModule = () => Baeta.createModuleManager(ModuleMetadata);
export const getCustomNativeDirectiveModule = Baeta.createSingletonModule(createCustomNativeDirectiveModule);
