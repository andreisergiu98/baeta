/* This file was generated by baeta. Do not edit it directly. */

/* eslint-disable */
/* prettier-ignore */

import * as Types from "../../__generated__/types";
import { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";


interface DefinedFields {
  User: 'id' | 'name' | 'birthday';
  Query: 'user';
  Mutation: 'updateUser';
  Subscription: 'onUserUpdate';
};

interface DefinedInputFields {
  UserWhereUnique: 'id' | 'email';
  UserUpdateInput: 'name' | 'birthday';
};

export type User = Pick<Types.User, DefinedFields['User']>;
export type UserWhereUnique = Pick<Types.UserWhereUnique, DefinedInputFields['UserWhereUnique']>;
export type UserUpdateInput = Pick<Types.UserUpdateInput, DefinedInputFields['UserUpdateInput']>;
export type Query = Pick<Types.Query, DefinedFields['Query']>;
export type Mutation = Pick<Types.Mutation, DefinedFields['Mutation']>;
export type Subscription = Pick<Types.Subscription, DefinedFields['Subscription']>;

export namespace ModuleMetadata {
  export const id = 'user';
  export const dirname = './user';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"User","loc":{"start":5,"end":9}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"id","loc":{"start":14,"end":16}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":18,"end":20}},"loc":{"start":18,"end":20}},"loc":{"start":18,"end":21}},"directives":[],"loc":{"start":14,"end":21}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"name","loc":{"start":24,"end":28}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":30,"end":36}},"loc":{"start":30,"end":36}},"loc":{"start":30,"end":37}},"directives":[],"loc":{"start":24,"end":37}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"birthday","loc":{"start":40,"end":48}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":50,"end":56}},"loc":{"start":50,"end":56}},"directives":[],"loc":{"start":40,"end":56}}],"loc":{"start":0,"end":58}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"UserWhereUnique","loc":{"start":66,"end":81}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"id","loc":{"start":86,"end":88}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":90,"end":92}},"loc":{"start":90,"end":92}},"directives":[],"loc":{"start":86,"end":92}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"email","loc":{"start":95,"end":100}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":102,"end":108}},"loc":{"start":102,"end":108}},"directives":[],"loc":{"start":95,"end":108}}],"loc":{"start":60,"end":110}},{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"UserUpdateInput","loc":{"start":118,"end":133}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"name","loc":{"start":138,"end":142}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":144,"end":150}},"loc":{"start":144,"end":150}},"directives":[],"loc":{"start":138,"end":150}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"birthday","loc":{"start":153,"end":161}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":163,"end":169}},"loc":{"start":163,"end":169}},"directives":[],"loc":{"start":153,"end":169}}],"loc":{"start":112,"end":171}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":178,"end":183}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"user","loc":{"start":188,"end":192}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":193,"end":198}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"UserWhereUnique","loc":{"start":200,"end":215}},"loc":{"start":200,"end":215}},"directives":[],"loc":{"start":193,"end":215}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"User","loc":{"start":218,"end":222}},"loc":{"start":218,"end":222}},"directives":[],"loc":{"start":188,"end":222}}],"loc":{"start":173,"end":224}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Mutation","loc":{"start":231,"end":239}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"updateUser","loc":{"start":244,"end":254}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"where","loc":{"start":255,"end":260}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"UserWhereUnique","loc":{"start":262,"end":277}},"loc":{"start":262,"end":277}},"directives":[],"loc":{"start":255,"end":277}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"data","loc":{"start":279,"end":283}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"UserUpdateInput","loc":{"start":285,"end":300}},"loc":{"start":285,"end":300}},"directives":[],"loc":{"start":279,"end":300}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"User","loc":{"start":303,"end":307}},"loc":{"start":303,"end":307}},"directives":[],"loc":{"start":244,"end":307}}],"loc":{"start":226,"end":309}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Subscription","loc":{"start":316,"end":328}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"onUserUpdate","loc":{"start":333,"end":345}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"User","loc":{"start":347,"end":351}},"loc":{"start":347,"end":351}},"directives":[],"loc":{"start":333,"end":351}}],"loc":{"start":311,"end":353}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      User: {
        ...module.createTypeMethods<User, Types.ContextType>("User"),
        id: module.createResolverBuilder<Types.Scalars["ID"], User, Types.ContextType, {}>("User", "id"),
        name: module.createResolverBuilder<Types.Scalars["String"], User, Types.ContextType, {}>("User", "name"),
        birthday: module.createResolverBuilder<Types.Maybe<Types.Scalars["String"]>, User, Types.ContextType, {}>("User", "birthday"),
      },
      Query: {
        ...module.createTypeMethods<{}, Types.ContextType>("Query"),
        user: module.createResolverBuilder<Types.Maybe<User>, {}, Types.ContextType, Types.QueryUserArgs>("Query", "user"),
      },
      Mutation: {
        ...module.createTypeMethods<{}, Types.ContextType>("Mutation"),
        updateUser: module.createResolverBuilder<Types.Maybe<User>, {}, Types.ContextType, Types.MutationUpdateUserArgs>("Mutation", "updateUser"),
      },
      Subscription: {
        ...module.createSubscriptionMethods<{}, Types.ContextType>(),
        onUserUpdate: module.createSubscriptionBuilder<Types.Maybe<User>, {}, Types.ContextType, {}>("onUserUpdate"),
      },
    };
  }
}

export const createUserModule = () => Baeta.createModuleManager(ModuleMetadata);
export const getUserModule = Baeta.createSingletonModule(createUserModule);
