/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */
/* @biome-ignore-all: generated file */

import type { DocumentNode, GraphQLScalarType } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import extensions from "../extensions.ts";
import type {Ctx, Info} from "../types.ts";
import * as Types from "../../__generated__/types.ts";

const moduleMetadata = {
  id: 'user-photos-pages',
  dirname: './user-photos-pages',
  typedef: {"kind":"Document","definitions":[{"kind":"InputObjectTypeDefinition","name":{"kind":"Name","value":"UserPhotoPage","loc":{"start":6,"end":19}},"directives":[],"fields":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"cursor","loc":{"start":23,"end":29}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID","loc":{"start":31,"end":33}},"loc":{"start":31,"end":33}},"directives":[],"loc":{"start":23,"end":33}},{"kind":"InputValueDefinition","name":{"kind":"Name","value":"limit","loc":{"start":35,"end":40}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":42,"end":45}},"loc":{"start":42,"end":45}},"loc":{"start":42,"end":46}},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"validInt","loc":{"start":48,"end":56}},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"min","loc":{"start":57,"end":60}},"value":{"kind":"IntValue","value":"1","loc":{"start":62,"end":63}},"loc":{"start":57,"end":63}},{"kind":"Argument","name":{"kind":"Name","value":"max","loc":{"start":65,"end":68}},"value":{"kind":"IntValue","value":"50","loc":{"start":70,"end":72}},"loc":{"start":65,"end":72}}],"loc":{"start":47,"end":73}}],"loc":{"start":35,"end":73}}],"loc":{"start":0,"end":75}},{"kind":"ObjectTypeExtension","name":{"kind":"Name","value":"User","loc":{"start":89,"end":93}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"photosConnection","loc":{"start":97,"end":113}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"page","loc":{"start":114,"end":118}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UserPhotoPage","loc":{"start":120,"end":133}},"loc":{"start":120,"end":133}},"loc":{"start":120,"end":134}},"directives":[],"loc":{"start":114,"end":134}}],"type":{"kind":"NamedType","name":{"kind":"Name","value":"UserPhotoConnection","loc":{"start":137,"end":156}},"loc":{"start":137,"end":156}},"directives":[],"loc":{"start":97,"end":156}}],"loc":{"start":77,"end":158}}]} as unknown as DocumentNode
}

interface BaetaModuleTypes {
  Builders: {
    User: Baeta.TypeMethods<Types.User, Ctx, Info, BaetaModuleObjectTypeFields['User']['Builder'], BaetaModuleObjectTypeFields['User']['Factory']>
  };
  Factories: {
    User: Baeta.TypeCompilerFactory<Types.User, Ctx, Info, BaetaModuleObjectTypeFields['User']['Factory']>
  };
};

interface BaetaModuleObjectTypeFields {
  User: {
    Builder: {
      photosConnection: Baeta.FieldMethods<Types.UserPhotoConnection | null, Types.User, Ctx, Types.UserPhotosConnectionArgs, Info>
    };
    Factory: {
      photosConnection: Baeta.Field<Types.UserPhotoConnection | null, Types.UserPhotoConnection | null, Types.User, Ctx, Types.UserPhotosConnectionArgs, Info>
    };
  };
};

export const UserPhotosPagesModule = Baeta.createModuleBuilder<Ctx, Info, BaetaModuleTypes['Builders'], BaetaModuleTypes['Factories']>(moduleMetadata.id, moduleMetadata.typedef, {
  User: Baeta.createTypeBuilder("User", {
    photosConnection: Baeta.createFieldBuilder("User", "photosConnection", extensions)
  }, extensions)
}, {

}, extensions);