{
  "name": "@baeta/extension-cache-cloudflare",
  "version": "0.0.6",
  "keywords": [
    "baeta",
    "graphql",
    "schema",
    "types",
    "typescript",
    "framework",
    "builder"
  ],
  "homepage": "https://github.com/andreisergiu98/baeta#readme",
  "bugs": {
    "url": "https://github.com/andreisergiu98/baeta/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/andreisergiu98/baeta.git",
    "directory": "packages/extension-cache-cloudflare"
  },
  "license": "MIT",
  "author": {
    "name": "Andrei Pampu",
    "url": "https://github.com/andreisergiu98"
  },
  "type": "module",
  "exports": {
    ".": {
      "types": "./index.ts",
      "default": "./dist/index.js"
    },
    "./sdk": {
      "types": "./sdk/index.ts",
      "default": "./dist/sdk/index.js"
    }
  },
  "types": "dist/index.d.ts",
  "files": [
    "dist",
    "package.json"
  ],
  "scripts": {
    "build": "tsup",
    "dev": "tsup --watch",
    "prepack": "prep",
    "postpack": "prep --clean",
    "test": "ava",
    "types": "tsc --noEmit"
  },
  "devDependencies": {
    "@baeta/builder": "workspace:^",
    "@baeta/core": "workspace:^",
    "@baeta/extension-cache": "workspace:^",
    "@baeta/testing": "workspace:^",
    "@baeta/tests-cache-stores": "workspace:^",
    "@baeta/tsconfig": "workspace:^",
    "@cloudflare/workers-types": "^4.20250312.0",
    "esbuild": "^0.25.1",
    "graphql": "^16.10.0",
    "miniflare": "^4.20250310.0",
    "typescript": "^5.8.2"
  },
  "peerDependencies": {
    "@baeta/extension-cache": "workspace:^",
    "@cloudflare/workers-types": "^4"
  },
  "engines": {
    "node": ">=22.12.0"
  },
  "publishConfig": {
    "access": "public",
    "exports": {
      ".": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.js"
      },
      "./sdk": {
        "types": "./dist/sdk/index.d.ts",
        "default": "./dist/sdk/index.js"
      }
    }
  },
  "ava": {
    "extensions": {
      "ts": "module"
    },
    "nodeArguments": [
      "--no-warnings",
      "--experimental-transform-types"
    ]
  },
  "typedocOptions": {
    "entryPoints": [
      "./index.ts",
      "./sdk/index.ts"
    ],
    "readme": "none",
    "tsconfig": "./tsconfig.json",
    "sort": [
      "kind",
      "instance-first",
      "required-first",
      "alphabetical-ignoring-documents"
    ]
  }
}
