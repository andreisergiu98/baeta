/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */
/* @biome-ignore-all: generated file */

import type { DocumentNode, GraphQLScalarType } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import extensions from "../extensions.ts";
import type {Ctx, Info} from "../types.ts";
import * as Types from "../../__generated__/types.ts";

const moduleMetadata = {
  id: 'custom-input-directive',
  dirname: './custom-input-directive',
  typedef: {"kind":"Document","definitions":[{"kind":"DirectiveDefinition","name":{"kind":"Name","value":"increment","loc":{"start":11,"end":20}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"by","loc":{"start":21,"end":23}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":25,"end":28}},"loc":{"start":25,"end":28}},"loc":{"start":25,"end":29}},"directives":[],"loc":{"start":21,"end":29}}],"repeatable":false,"locations":[{"kind":"Name","value":"INPUT_FIELD_DEFINITION","loc":{"start":34,"end":56}},{"kind":"Name","value":"ARGUMENT_DEFINITION","loc":{"start":59,"end":78}}],"loc":{"start":0,"end":78}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"Query","loc":{"start":85,"end":90}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"testIncrementDirective","loc":{"start":94,"end":116}},"arguments":[{"kind":"InputValueDefinition","name":{"kind":"Name","value":"value","loc":{"start":117,"end":122}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":124,"end":127}},"loc":{"start":124,"end":127}},"loc":{"start":124,"end":128}},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"increment","loc":{"start":130,"end":139}},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"by","loc":{"start":140,"end":142}},"value":{"kind":"IntValue","value":"1","loc":{"start":144,"end":145}},"loc":{"start":140,"end":145}}],"loc":{"start":129,"end":146}}],"loc":{"start":117,"end":146}}],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int","loc":{"start":149,"end":152}},"loc":{"start":149,"end":152}},"loc":{"start":149,"end":153}},"directives":[],"loc":{"start":94,"end":153}}],"loc":{"start":80,"end":155}}]} as unknown as DocumentNode
}

interface BaetaModuleTypes {
  Builders: {
    Query: Baeta.TypeMethods<{}, Ctx, Info, BaetaModuleObjectTypeFields['Query']['Builder'], BaetaModuleObjectTypeFields['Query']['Factory']>
  };
  Factories: {
    Query: Baeta.TypeCompilerFactory<{}, Ctx, Info, BaetaModuleObjectTypeFields['Query']['Factory']>
  };
};

interface BaetaModuleObjectTypeFields {
  Query: {
    Builder: {
      testIncrementDirective: Baeta.FieldMethods<Types.Scalars["Int"], {}, Ctx, Types.QueryTestIncrementDirectiveArgs, Info>
    };
    Factory: {
      testIncrementDirective: Baeta.Field<Types.Scalars["Int"], Types.Scalars["Int"], {}, Ctx, Types.QueryTestIncrementDirectiveArgs, Info>
    };
  };
};

export const CustomInputDirectiveModule = Baeta.createModuleBuilder<Ctx, Info, BaetaModuleTypes['Builders'], BaetaModuleTypes['Factories']>(moduleMetadata.id, moduleMetadata.typedef, {
  Query: Baeta.createTypeBuilder("Query", {
    testIncrementDirective: Baeta.createFieldBuilder("Query", "testIncrementDirective", extensions)
  }, extensions)
}, {

}, extensions);