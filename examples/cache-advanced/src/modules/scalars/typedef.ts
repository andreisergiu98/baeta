/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */
/* @biome-ignore-all: generated file */

import type { DocumentNode, GraphQLScalarType } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import extensions from "../extensions.ts";
import type {Ctx, Info} from "../types.ts";
import * as Types from "../../__generated__/types.ts";

const moduleMetadata = {
  id: 'scalars',
  dirname: './scalars',
  typedef: {"kind":"Document","definitions":[{"kind":"ScalarTypeDefinition","name":{"kind":"Name","value":"DateTime","loc":{"start":7,"end":15}},"directives":[],"loc":{"start":0,"end":15}},{"kind":"ScalarTypeDefinition","name":{"kind":"Name","value":"UUID","loc":{"start":24,"end":28}},"directives":[],"loc":{"start":17,"end":28}}]} as unknown as DocumentNode
}

interface BaetaModuleTypes {
  Builders: {
  };
  Factories: {
    DateTime: GraphQLScalarType
    UUID: GraphQLScalarType
  };
};

interface BaetaModuleObjectTypeFields {
};

export const ScalarsModule = Baeta.createModuleBuilder<Ctx, Info, BaetaModuleTypes['Builders'], BaetaModuleTypes['Factories']>(moduleMetadata.id, moduleMetadata.typedef, {

}, {

}, extensions);