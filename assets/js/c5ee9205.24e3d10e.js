"use strict";(self.webpackChunk_baeta_website=self.webpackChunk_baeta_website||[]).push([["4567"],{50815:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>i,default:()=>d,toc:()=>c,metadata:()=>o,assets:()=>s,contentTitle:()=>l});var o=JSON.parse('{"id":"guides/application","title":"Application","description":"This guide explains how to set up a Baeta application and integrate it with a GraphQL server.","source":"@site/docs/guides/application.mdx","sourceDirName":"guides","slug":"/guides/application","permalink":"/docs/guides/application","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"sidebar_position":50},"sidebar":"defaultSidebar","previous":{"title":"Context","permalink":"/docs/guides/context"},"next":{"title":"Error Handling","permalink":"/docs/guides/errors"}}'),a=n(92669),r=n(51846);let i={sidebar_position:50},l="Application",s={},c=[{value:"Manual Module Registration",id:"manual-module-registration",level:2},{value:"Automatic Registration (Autoloading)",id:"automatic-registration-autoloading",level:2},{value:"Server Integration",id:"server-integration",level:2},{value:"Apollo Server",id:"apollo-server",level:3},{value:"GraphQL Yoga",id:"graphql-yoga",level:3}];function p(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"application",children:"Application"})}),"\n",(0,a.jsx)(t.p,{children:"This guide explains how to set up a Baeta application and integrate it with a GraphQL server."}),"\n",(0,a.jsx)(t.h2,{id:"manual-module-registration",children:"Manual Module Registration"}),"\n",(0,a.jsx)(t.p,{children:"Without autoloading, you need to manually register your modules:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'// src/modules/user/index.ts\nimport "./resolvers";\nimport { getUserModule } from "./typedef";\n\nexport const userModule = getUserModule();\n\n// src/app.ts\nimport { createApplication } from "@baeta/core";\nimport { userModule } from "./modules/user";\nimport { postModule } from "./modules/post";\nimport { scalarsModule } from "./modules/scalars";\n\nconst baeta = createApplication({\n  modules: [userModule, postModule, scalarsModule],\n});\n'})}),"\n",(0,a.jsx)(t.h2,{id:"automatic-registration-autoloading",children:"Automatic Registration (Autoloading)"}),"\n",(0,a.jsxs)(t.p,{children:["Using ",(0,a.jsx)(t.a,{href:"/docs/plugins/autoloading",children:(0,a.jsx)(t.code,{children:"@baeta/plugin-autoload"})})," simplifies the setup:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'// baeta.ts\nimport { defineConfig } from "@baeta/cli";\nimport { autoloadPlugin } from "@baeta/plugin-autoload";\n\nexport default defineConfig({\n  plugins: [autoloadPlugin()],\n  // ... other config\n});\n\n// src/app.ts\nimport { createApplication } from "@baeta/core";\nimport { modules } from "./modules/autoload.ts";\n\nconst baeta = createApplication({\n  // Modules are loaded automatically\n  modules,\n});\n'})}),"\n",(0,a.jsx)(t.h2,{id:"server-integration",children:"Server Integration"}),"\n",(0,a.jsx)(t.h3,{id:"apollo-server",children:"Apollo Server"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'import { ApolloServer } from "@apollo/server";\nimport { startStandaloneServer } from "@apollo/server/standalone";\nimport { createApplication } from "@baeta/core";\nimport { modules } from "./modules/autoload.ts";\nimport { Context, createContext } from "./context.ts";\n\nconst baeta = createApplication({\n  modules,\n});\n\nconst server = new ApolloServer<Context>({\n  schema: baeta.schema,\n});\n\nconst { url } = await startStandaloneServer(server, {\n  listen: { port: 4000 },\n  context: createContext,\n});\n\nconsole.log(`\uD83D\uDE80  Server ready at: ${url}`);\n'})}),"\n",(0,a.jsx)(t.h3,{id:"graphql-yoga",children:"GraphQL Yoga"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'import { createServer } from "node:http";\nimport { createApplication } from "@baeta/core";\nimport { createYoga } from "graphql-yoga";\nimport { modules } from "./modules/autoload.ts";\nimport { Context, ServerContext, createContext } from "./context.ts";\n\nconst baeta = createApplication({\n  modules,\n});\n\nexport const yoga = createYoga<ServerContext, Context>({\n  schema: baeta.schema,\n  context: createContext,\n});\n\nconst server = createServer(yoga);\n\nserver.listen(4000, () => {\n  console.log(\n    `\uD83D\uDE80 Server ready at http://localhost:4000${yoga.graphqlEndpoint}`,\n  );\n});\n'})})]})}function d(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},51846:function(e,t,n){n.d(t,{Z:()=>l,a:()=>i});var o=n(60650);let a={},r=o.createContext(a);function i(e){let t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);