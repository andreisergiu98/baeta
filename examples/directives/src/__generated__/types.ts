/* This file was generated by Baeta. Do not edit it directly. All changes will be overwritten by the generator. */
/* eslint-disable */
/* @biome-ignore-all: generated file */

import * as BaetaUtility from "./utility.ts";
import * as BaetaOverrides from "../modules/types.ts";

export type Scalars = BaetaOverrides.Scalars;

export type Query = BaetaUtility.Or<BaetaOverrides.ObjectTypes["Query"], {
  testIncrementDirective: Scalars["Int"]
  testUpperDirective: NameWithUpper | null
  user: User | null
}>

export type Mutation = BaetaUtility.Or<BaetaOverrides.ObjectTypes["Mutation"], {
  createUser: User | null
}>

export type StringFormat = 'EMAIL' | 'UUID' | 'URL'

export type NameWithUpper = BaetaUtility.Or<BaetaOverrides.ObjectTypes["NameWithUpper"], {
  name: Scalars["String"]
}>

export type User = BaetaUtility.Or<BaetaOverrides.ObjectTypes["User"], {
  id: Scalars["ID"]
  email: Scalars["String"]
  lastName: Scalars["String"]
  profile: Scalars["String"] | null
  givenName: Scalars["String"] | null
}>

export type QueryTestIncrementDirectiveArgs = {
  value: Scalars["Int"]
};

export type QueryTestUpperDirectiveArgs = {
  name: Scalars["String"]
};

export type QueryUserArgs = {
  where: UserWhereUniqueInput
};

export type NameWithUpperNameArgs = {
};

export type UserIdArgs = {
};

export type UserEmailArgs = {
};

export type UserLastNameArgs = {
};

export type UserProfileArgs = {
};

export type UserGivenNameArgs = {
};

export type MutationCreateUserArgs = {
  email: Scalars["String"]
  lastName: Scalars["String"]
};

export type UserWhereUniqueInput = {
  id: Scalars["ID"] | null
  email: Scalars["String"] | null
};

export type CreateUserInput = {
  email: Scalars["String"]
  username: Scalars["String"]
  lastName: Scalars["String"]
  firstName: Scalars["String"] | null
};