"use strict";(self.webpackChunk_baeta_website=self.webpackChunk_baeta_website||[]).push([["6194"],{16061:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>a,default:()=>u,toc:()=>l,metadata:()=>s,assets:()=>d,contentTitle:()=>o});var s=JSON.parse('{"id":"guides/context","title":"Context","description":"Baeta allows you to define a shared context that\'s available throughout your resolvers and middlewares.","source":"@site/docs/guides/context.mdx","sourceDirName":"guides","slug":"/guides/context","permalink":"/docs/guides/context","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40},"sidebar":"defaultSidebar","previous":{"title":"Middlewares","permalink":"/docs/guides/middlewares"},"next":{"title":"Application","permalink":"/docs/guides/application"}}'),r=n(92669),i=n(51846);let a={sidebar_position:40},o="Context",d={},l=[{value:"Define Context Type",id:"define-context-type",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Usage in Resolvers",id:"usage-in-resolvers",level:2},{value:"Usage in Middlewares",id:"usage-in-middlewares",level:2}];function c(e){let t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"context",children:"Context"})}),"\n",(0,r.jsx)(t.p,{children:"Baeta allows you to define a shared context that's available throughout your resolvers and middlewares."}),"\n",(0,r.jsx)(t.h2,{id:"define-context-type",children:"Define Context Type"}),"\n",(0,r.jsx)(t.p,{children:"First, define your context type:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'// src/context.ts\nimport type { PubSub } from "graphql-yoga";\nimport type { PubSubMap } from "../lib/pubsub";\nimport type { PrismaClient } from "../lib/db/prisma";\n\nexport type Context = {\n  db: PrismaClient;\n  pubsub: PubSub<PubSubMap>;\n};\n'})}),"\n",(0,r.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(t.p,{children:["Add the context type path to your ",(0,r.jsx)(t.code,{children:"baeta.ts"})," configuration:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import { defineConfig } from "@baeta/cli";\nimport { autoloadPlugin } from "@baeta/plugin-autoload";\n\nexport default defineConfig({\n  graphql: {\n    schemas: ["src/**/*.gql"],\n    contextType: "src/context#Context", // Path to context type\n  },\n  // ... rest of config\n});\n'})}),"\n",(0,r.jsx)(t.h2,{id:"usage-in-resolvers",children:"Usage in Resolvers"}),"\n",(0,r.jsx)(t.p,{children:"The context is automatically typed in your resolvers:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"const { Query } = getUserModule();\n\nQuery.user(({ args, ctx }) => {\n  // ctx is typed as Context\n  return ctx.db.user.findUnique({\n    where: args.where,\n  });\n});\n"})}),"\n",(0,r.jsx)(t.h2,{id:"usage-in-middlewares",children:"Usage in Middlewares"}),"\n",(0,r.jsx)(t.p,{children:"Middlewares also get the typed context:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'Mutation.updateUser.$use(async ({ ctx }, next) => {\n  // ctx is typed as Context\n  const result = await next();\n  ctx.pubsub.publish("user-updated", result);\n  return result;\n});\n'})})]})}function u(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},51846:function(e,t,n){n.d(t,{Z:()=>o,a:()=>a});var s=n(60650);let r={},i=s.createContext(r);function a(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);