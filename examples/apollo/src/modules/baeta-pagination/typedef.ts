/* This file was generated by baeta. Do not edit it directly. */

/* eslint-disable */
/* prettier-ignore */

import * as Types from "../../__generated__/types";
import { DocumentNode } from "graphql";
import * as Baeta from "@baeta/core/sdk";
import baetaExtensions from "../../extensions";


interface DefinedFields {
  PageInfo: 'hasPreviousPage' | 'hasNextPage';
  UserConnection: 'pageInfo' | 'edges';
  UserEdge: 'cursor' | 'node';
  UserPhotoConnection: 'pageInfo' | 'edges';
  UserPhotoEdge: 'cursor' | 'node';
};

export type PageInfo = Pick<Types.PageInfo, DefinedFields['PageInfo']>;
export type UserConnection = Pick<Types.UserConnection, DefinedFields['UserConnection']>;
export type UserEdge = Pick<Types.UserEdge, DefinedFields['UserEdge']>;
export type User = Types.User;
export type UserPhotoConnection = Pick<Types.UserPhotoConnection, DefinedFields['UserPhotoConnection']>;
export type UserPhotoEdge = Pick<Types.UserPhotoEdge, DefinedFields['UserPhotoEdge']>;
export type UserPhoto = Types.UserPhoto;

export namespace ModuleMetadata {
  export const id = 'baeta-pagination';
  export const dirname = './baeta-pagination';
  export const typedef = {"kind":"Document","definitions":[{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"PageInfo","loc":{"start":103,"end":111}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"hasPreviousPage","loc":{"start":116,"end":131}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean","loc":{"start":133,"end":140}},"loc":{"start":133,"end":140}},"loc":{"start":133,"end":141}},"directives":[],"loc":{"start":116,"end":141}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"hasNextPage","loc":{"start":144,"end":155}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean","loc":{"start":157,"end":164}},"loc":{"start":157,"end":164}},"loc":{"start":157,"end":165}},"directives":[],"loc":{"start":144,"end":165}}],"loc":{"start":98,"end":167}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"UserConnection","loc":{"start":174,"end":188}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"pageInfo","loc":{"start":193,"end":201}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo","loc":{"start":203,"end":211}},"loc":{"start":203,"end":211}},"loc":{"start":203,"end":212}},"directives":[],"loc":{"start":193,"end":212}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"edges","loc":{"start":215,"end":220}},"arguments":[],"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UserEdge","loc":{"start":223,"end":231}},"loc":{"start":223,"end":231}},"loc":{"start":222,"end":232}},"directives":[],"loc":{"start":215,"end":232}}],"loc":{"start":169,"end":234}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"UserEdge","loc":{"start":241,"end":249}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"cursor","loc":{"start":254,"end":260}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":262,"end":268}},"loc":{"start":262,"end":268}},"loc":{"start":262,"end":269}},"directives":[],"loc":{"start":254,"end":269}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"node","loc":{"start":272,"end":276}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"User","loc":{"start":278,"end":282}},"loc":{"start":278,"end":282}},"directives":[],"loc":{"start":272,"end":282}}],"loc":{"start":236,"end":284}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"UserPhotoConnection","loc":{"start":291,"end":310}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"pageInfo","loc":{"start":315,"end":323}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo","loc":{"start":325,"end":333}},"loc":{"start":325,"end":333}},"loc":{"start":325,"end":334}},"directives":[],"loc":{"start":315,"end":334}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"edges","loc":{"start":337,"end":342}},"arguments":[],"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UserPhotoEdge","loc":{"start":345,"end":358}},"loc":{"start":345,"end":358}},"loc":{"start":344,"end":359}},"directives":[],"loc":{"start":337,"end":359}}],"loc":{"start":286,"end":361}},{"kind":"ObjectTypeDefinition","name":{"kind":"Name","value":"UserPhotoEdge","loc":{"start":368,"end":381}},"interfaces":[],"directives":[],"fields":[{"kind":"FieldDefinition","name":{"kind":"Name","value":"cursor","loc":{"start":386,"end":392}},"arguments":[],"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String","loc":{"start":394,"end":400}},"loc":{"start":394,"end":400}},"loc":{"start":394,"end":401}},"directives":[],"loc":{"start":386,"end":401}},{"kind":"FieldDefinition","name":{"kind":"Name","value":"node","loc":{"start":404,"end":408}},"arguments":[],"type":{"kind":"NamedType","name":{"kind":"Name","value":"UserPhoto","loc":{"start":410,"end":419}},"loc":{"start":410,"end":419}},"directives":[],"loc":{"start":404,"end":419}}],"loc":{"start":363,"end":421}}]} as unknown as DocumentNode;
  
  export function createManager(module: Baeta.ModuleBuilder) {
    return {
      ...module.createModuleMethods<Types.ContextType>(),
      PageInfo: {
        ...module.createTypeMethods<PageInfo, Types.ContextType>("PageInfo"),
        hasPreviousPage: module.createResolverBuilder<Types.Scalars["Boolean"], PageInfo, Types.ContextType, {}>("PageInfo", "hasPreviousPage"),
        hasNextPage: module.createResolverBuilder<Types.Scalars["Boolean"], PageInfo, Types.ContextType, {}>("PageInfo", "hasNextPage"),
      },
      UserConnection: {
        ...module.createTypeMethods<UserConnection, Types.ContextType>("UserConnection"),
        pageInfo: module.createResolverBuilder<PageInfo, UserConnection, Types.ContextType, {}>("UserConnection", "pageInfo"),
        edges: module.createResolverBuilder<Types.Maybe<Array<Types.Maybe<UserEdge>>>, UserConnection, Types.ContextType, {}>("UserConnection", "edges"),
      },
      UserEdge: {
        ...module.createTypeMethods<UserEdge, Types.ContextType>("UserEdge"),
        cursor: module.createResolverBuilder<Types.Scalars["String"], UserEdge, Types.ContextType, {}>("UserEdge", "cursor"),
        node: module.createResolverBuilder<Types.Maybe<User>, UserEdge, Types.ContextType, {}>("UserEdge", "node"),
      },
      UserPhotoConnection: {
        ...module.createTypeMethods<UserPhotoConnection, Types.ContextType>("UserPhotoConnection"),
        pageInfo: module.createResolverBuilder<PageInfo, UserPhotoConnection, Types.ContextType, {}>("UserPhotoConnection", "pageInfo"),
        edges: module.createResolverBuilder<Types.Maybe<Array<Types.Maybe<UserPhotoEdge>>>, UserPhotoConnection, Types.ContextType, {}>("UserPhotoConnection", "edges"),
      },
      UserPhotoEdge: {
        ...module.createTypeMethods<UserPhotoEdge, Types.ContextType>("UserPhotoEdge"),
        cursor: module.createResolverBuilder<Types.Scalars["String"], UserPhotoEdge, Types.ContextType, {}>("UserPhotoEdge", "cursor"),
        node: module.createResolverBuilder<Types.Maybe<UserPhoto>, UserPhotoEdge, Types.ContextType, {}>("UserPhotoEdge", "node"),
      },
    };
  }
}

export const createBaetaPaginationModule = () => Baeta.createModuleManager(ModuleMetadata, baetaExtensions);
export const getBaetaPaginationModule = Baeta.createSingletonModule(createBaetaPaginationModule);
