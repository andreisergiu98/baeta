"use strict";(self.webpackChunk_baeta_website=self.webpackChunk_baeta_website||[]).push([["9984"],{97084:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>l,default:()=>p,toc:()=>u,metadata:()=>a,assets:()=>c,contentTitle:()=>o});var a=JSON.parse('{"id":"guides/environment","title":"Environment","description":"Baeta provides a type-safe environment variable parser that helps you validate and transform environment variables at runtime while maintaining full type safety.","source":"@site/docs/guides/environment.mdx","sourceDirName":"guides","slug":"/guides/environment","permalink":"/docs/guides/environment","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":130,"frontMatter":{"sidebar_position":130,"title":"Environment"},"sidebar":"defaultSidebar","previous":{"title":"Typed PubSub","permalink":"/docs/guides/typed-pubsub"},"next":{"title":"Extensions","permalink":"/docs/category/extensions"}}'),s=r(92669),t=r(51846),i=r(31867);let l={sidebar_position:130,title:"Environment"},o="Environment Parser",c={},u=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Types",id:"types",level:3},{value:"TypeScript Support",id:"typescript-support",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Examples",id:"examples",level:2},{value:"Required Variables",id:"required-variables",level:3},{value:"Default Values",id:"default-values",level:3},{value:"Custom Resolvers",id:"custom-resolvers",level:3},{value:"Complex Configuration Example",id:"complex-configuration-example",level:3},{value:"Environment Sources",id:"environment-sources",level:2},{value:"Node.js",id:"nodejs",level:3},{value:"Deno",id:"deno",level:3},{value:"Bun",id:"bun",level:3},{value:"Vite",id:"vite",level:3},{value:"Next.js",id:"nextjs",level:3}];function d(e){let n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"environment-parser",children:"Environment Parser"})}),"\n",(0,s.jsx)(n.p,{children:"Baeta provides a type-safe environment variable parser that helps you validate and transform environment variables at runtime while maintaining full type safety."}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n","\n",(0,s.jsx)(i.p,{package:"@baeta/env"}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { createEnvParser } from "@baeta/env";\n\n// Create a parser that reads from process.env\nconst parse = createEnvParser((key) => process.env[key]);\n\nexport const config = {\n  // Basic string parsing\n  apiKey: parse("API_KEY", {\n    type: "string",\n    required: true,\n  }),\n\n  // Number with default value\n  port: parse("PORT", {\n    type: "number",\n    default: 3000,\n  }),\n\n  // Boolean with custom resolver\n  isDevelopment: parse("NODE_ENV", {\n    type: "boolean",\n    default: true,\n    resolver: (value) => value === "development",\n  }),\n};\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,s.jsx)(n.p,{children:"The parser supports three basic types:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"typescript-support",children:"TypeScript Support"}),"\n",(0,s.jsx)(n.p,{children:"The parser provides full type inference:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const config = {\n  port: parse("PORT", {\n    type: "number",\n    default: 3000,\n  }),\n  cachePrefix: parse("CACHE_PREFIX", {\n    type: "string",\n  }),\n};\n\n// config.port is inferred as number\nconst port: number = config.port; // OK\nconst port: string = config.port; // Type error\nconst prefix: string = config.cachePrefix; // Possible type undefined is not assignable to string\n'})}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.p,{children:"The parser will throw descriptive errors when:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A required variable is missing"}),"\n",(0,s.jsx)(n.li,{children:"Type conversion fails (e.g., parsing a number)"}),"\n",(0,s.jsx)(n.li,{children:"Custom resolver throws an error"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"required-variables",children:"Required Variables"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const config = {\n  databaseUrl: parse("DATABASE_URL", {\n    type: "string",\n    required: true, // Will throw if not provided\n  }),\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"default-values",children:"Default Values"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const config = {\n  logLevel: parse("LOG_LEVEL", {\n    type: "string",\n    default: "info", // Uses \'info\' if not provided\n  }),\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"custom-resolvers",children:"Custom Resolvers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const config = {\n  isProduction: parse("NODE_ENV", {\n    type: "boolean",\n    default: false,\n    resolver: (value) => value === "production",\n  }),\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"complex-configuration-example",children:"Complex Configuration Example"}),"\n",(0,s.jsx)(n.p,{children:"Here's a more comprehensive example showing various use cases:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { createEnvParser } from "@baeta/env";\n\nconst parse = createEnvParser((key) => process.env[key]);\n\nexport const config = {\n  // Basic required string\n  apiUrl: parse("API_URL", {\n    type: "string",\n    required: true,\n  }),\n\n  // Number with default\n  serverPort: parse("PORT", {\n    type: "number",\n    default: 80,\n  }),\n\n  // Boolean with custom resolver\n  isProduction: parse("NODE_ENV", {\n    type: "boolean",\n    default: false,\n    resolver: (value) => value === "production",\n  }),\n\n  // Optional string\n  cachePrefix: parse("CACHE_PREFIX", {\n    type: "string",\n    required: false,\n  }),\n\n  // Required with custom error handling\n  secretKey: parse("SECRET_KEY", {\n    type: "string",\n    required: true,\n  }),\n};\n'})}),"\n",(0,s.jsx)(n.h2,{id:"environment-sources",children:"Environment Sources"}),"\n",(0,s.jsx)(n.h3,{id:"nodejs",children:"Node.js"}),"\n",(0,s.jsxs)(n.p,{children:["Using Node's built-in ",(0,s.jsx)(n.code,{children:"process.env"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const parse = createEnvParser((key) => process.env[key]);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"deno",children:"Deno"}),"\n",(0,s.jsx)(n.p,{children:"Using Deno's built-in Deno.env:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const parse = createEnvParser((key) => Deno.env.get(key));\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bun",children:"Bun"}),"\n",(0,s.jsx)(n.p,{children:"Using Bun's built-in process.env or Bun.env:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Using process.env (Node.js compatible)\nconst parse = createEnvParser((key) => process.env[key]);\n\n// Using Bun.env (Bun specific)\nconst parse = createEnvParser((key) => Bun.env[key]);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"vite",children:"Vite"}),"\n",(0,s.jsxs)(n.p,{children:["When using Vite, you can access environment variables through ",(0,s.jsx)(n.code,{children:"import.meta.env"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const parse = createEnvParser((key) => import.meta.env[key]);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"nextjs",children:"Next.js"}),"\n",(0,s.jsxs)(n.p,{children:["Next.js requires special handling of environment variables during bundling. Only variables prefixed with ",(0,s.jsx)(n.code,{children:"NEXT_PUBLIC_"})," are included in the client bundle, and they must be accessed via ",(0,s.jsx)(n.code,{children:"process.env.NEXT_PUBLIC_*"})," directly in your code, since the bundler inlines them."]}),"\n",(0,s.jsx)(n.p,{children:"To work around this limitation, you can create a map of your environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const envMap = {\n  NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,\n  // ... other env vars\n} as const;\n\nconst parse = createEnvParser((key) => envMap[key as keyof typeof envMap]);\n\nexport const config = {\n  apiUrl: parse("NEXT_PUBLIC_API_URL", {\n    type: "string",\n    required: true,\n  }),\n};\n'})}),"\n",(0,s.jsx)(n.p,{children:"Or you can edit the Webpack configuration to include a global map of public variables."})]})}function p(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},31867:function(e,n,r){r.d(n,{b:()=>E,p:()=>y});var a=r(92669),s=r(1718),t=r(60650),i=r(66207);function l(e){let{children:n,hidden:r,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.Z)("tabItem_iagj",s),hidden:r,children:n})}var o=r(36447),c=r(63497),u=r(89691),d=r(38789),p=r(88770),h=r(93970);function v(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function m(e){let{value:n,tabValues:r}=e;return r.some(e=>e.value===n)}var g=r(81820);function x(e){let{className:n,block:r,selectedValue:s,selectValue:t,tabValues:l}=e,c=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{let n=e.currentTarget,r=l[c.indexOf(n)].value;r!==s&&(u(n),t(r))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{let r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1]}}n?.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},n),children:l.map(e=>{let{value:n,label:r,attributes:t}=e;return(0,a.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{c.push(e)},onKeyDown:p,onClick:d,...t,className:(0,i.Z)("tabs__item","tabItem_rLPU",t?.className,{"tabs__item--active":s===n}),children:r??n},n)})})}function f(e){let{lazy:n,children:r,selectedValue:s}=e,l=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){let e=l.find(e=>e.props.value===s);return e?(0,t.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function b(e){let n=function(e){let{defaultValue:n,queryString:r=!1,groupId:a}=e,s=function(e){let{values:n,children:r}=e;return(0,t.useMemo)(()=>{let e=n??v(r).map(e=>{let{props:{value:n,label:r,attributes:a,default:s}}=e;return{value:n,label:r,attributes:a,default:s}}),a=(0,p.lx)(e,(e,n)=>e.value===n.value);if(a.length>0)throw Error(`Docusaurus error: Duplicate values "${a.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,r])}(e),[i,l]=(0,t.useState)(()=>(function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let a=r.find(e=>e.default)??r[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:n,tabValues:s})),[o,g]=function(e){let{queryString:n=!1,groupId:r}=e,a=(0,c.k6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,d._X)(s),(0,t.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})},[s,a])]}({queryString:r,groupId:a}),[x,f]=function(e){let{groupId:n}=e,r=n?`docusaurus.tab.${n}`:null,[a,s]=(0,h.Nk)(r);return[a,(0,t.useCallback)(e=>{r&&s.set(e)},[r,s])]}({groupId:a}),b=(()=>{let e=o??x;return m({value:e,tabValues:s})?e:null})();return(0,u.Z)(()=>{b&&l(b)},[b]),{selectedValue:i,selectValue:(0,t.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);l(e),g(e),f(e)},[g,f,s]),tabValues:s}}(e);return(0,a.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList_qd9z"),children:[(0,a.jsx)(x,{...n,...e}),(0,a.jsx)(f,{...n,...e})]})}function j(e){let n=(0,g.Z)();return(0,a.jsx)(b,{...e,children:v(e.children)},String(n))}function y(e){let n=e.dev?" -D":"";return(0,a.jsxs)(j,{groupId:"package-manager",children:[(0,a.jsx)(l,{value:"yarn",children:(0,a.jsxs)(s.Z,{language:"bash",children:["yarn add ",e.package,n]})}),(0,a.jsx)(l,{value:"npm",children:(0,a.jsxs)(s.Z,{language:"bash",children:["npm install ",e.package,n]})}),(0,a.jsx)(l,{value:"pnpm",children:(0,a.jsxs)(s.Z,{language:"bash",children:["pnpm add ",e.package,n]})}),(0,a.jsx)(l,{value:"bun",children:(0,a.jsxs)(s.Z,{language:"bash",children:["bun add ",e.package,n]})})]})}function E(e){return(0,a.jsxs)(j,{groupId:"package-manager",children:[(0,a.jsx)(l,{value:"yarn",children:(0,a.jsxs)(s.Z,{language:"bash",children:["yarn create ",e.package]})}),(0,a.jsx)(l,{value:"npm",children:(0,a.jsxs)(s.Z,{language:"bash",children:["npx create-",e.package]})}),(0,a.jsx)(l,{value:"pnpm",children:(0,a.jsxs)(s.Z,{language:"bash",children:["pnpm create ",e.package]})}),(0,a.jsx)(l,{value:"bun",children:(0,a.jsxs)(s.Z,{language:"bash",children:["bun create ",e.package]})}),(0,a.jsx)(l,{value:"yarn-2",label:"yarn 2+",children:(0,a.jsxs)(s.Z,{language:"bash",children:["yarn dlx create-",e.package]})})]})}},51846:function(e,n,r){r.d(n,{Z:()=>l,a:()=>i});var a=r(60650);let s={},t=a.createContext(s);function i(e){let n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);